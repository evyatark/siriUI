package org.hasadna.gtfs.controller;

import com.fasterxml.jackson.core.JsonProcessingException;
import org.hasadna.gtfs.service.Routes;
import org.hasadna.gtfs.service.Shapes;
import org.hasadna.gtfs.service.SiriData;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
public class GtfsController {

    private static Logger logger = LoggerFactory.getLogger(GtfsController.class);

    @Autowired
    Shapes shapesService;

    @Autowired
    SiriData siriData;

    @Autowired
    Routes gtfsRoutes;


    /**
     * Assuming that the shape of a route does not change at all!
     * So no argument for date
     * @param routeId
     * @return
     */
    @GetMapping("gtfs/shape/{routeId}/{date}")
    public String retrieveShapeOfRouteAsJson(@PathVariable String routeId, @PathVariable String date) {
        logger.warn("===> gtfs/shape/{}/{}",routeId,date);
        return shapesService.findShape(routeId, date);
        // sample
        // route 16212
        //return "[[31.785666,35.200639],[31.785614,35.200606],[31.785572,35.200588],[31.785520,35.200582],[31.785404,35.200578],[31.785334,35.200586],[31.785270,35.200584],[31.785097,35.200580],[31.784563,35.200537],[31.784459,35.200509],[31.784152,35.200438],[31.784050,35.200371],[31.784017,35.200417],[31.783750,35.200754],[31.783474,35.201158],[31.783210,35.201494],[31.783112,35.201640],[31.782950,35.201872],[31.782667,35.202277],[31.782437,35.202563],[31.782359,35.202678],[31.782450,35.202754],[31.782581,35.202863],[31.782839,35.203035],[31.783063,35.203189],[31.783415,35.203409],[31.783846,35.203736],[31.784036,35.203880],[31.784221,35.203985],[31.784422,35.204086],[31.784621,35.204152],[31.784850,35.204185],[31.785067,35.204176],[31.785096,35.204175],[31.785278,35.204139],[31.785482,35.204073],[31.785645,35.204019],[31.785748,35.203985],[31.786028,35.203903],[31.786215,35.203857],[31.786394,35.203837],[31.786548,35.203844],[31.786816,35.203881],[31.786988,35.203934],[31.787105,35.203978],[31.787214,35.204032],[31.787354,35.204108],[31.787437,35.204167],[31.787749,35.204421],[31.787902,35.204571],[31.787916,35.204411],[31.787927,35.204211],[31.787920,35.204005],[31.787864,35.203034],[31.787855,35.202004],[31.787844,35.201733],[31.787843,35.201708],[31.787840,35.201364],[31.787851,35.201194],[31.787868,35.201070],[31.787897,35.200944],[31.787918,35.200862],[31.787947,35.200778],[31.788019,35.200622],[31.788085,35.200491],[31.788134,35.200396],[31.788146,35.200284],[31.788078,35.200220],[31.788034,35.200169],[31.787903,35.200044],[31.787599,35.199714],[31.787404,35.199527],[31.787120,35.199246],[31.787099,35.199221],[31.787020,35.199137],[31.786725,35.198821],[31.786195,35.198233],[31.785871,35.197949],[31.785762,35.197836],[31.785730,35.197960],[31.785524,35.198352],[31.785443,35.198481],[31.785258,35.198629],[31.785137,35.198682],[31.785054,35.198688],[31.784935,35.198664],[31.784769,35.198583],[31.783344,35.197523],[31.782438,35.196818],[31.782364,35.196766],[31.782106,35.196578],[31.781623,35.196207],[31.780635,35.195471],[31.780489,35.195371],[31.780327,35.195275],[31.780284,35.195243],[31.780214,35.195196],[31.779373,35.194617],[31.779178,35.194493],[31.778938,35.194366],[31.778627,35.194211],[31.778438,35.194130],[31.777941,35.193975],[31.777812,35.193937],[31.777628,35.193890],[31.777453,35.193849],[31.777197,35.193799],[31.776905,35.193753],[31.776467,35.193721],[31.776044,35.193704],[31.775415,35.193767],[31.774780,35.193885],[31.771582,35.194533],[31.771262,35.194594],[31.770988,35.194660],[31.770353,35.194789],[31.769721,35.194852],[31.769584,35.194852],[31.769310,35.194838],[31.769057,35.194804],[31.768920,35.194786],[31.768730,35.194740],[31.768538,35.194670],[31.768345,35.194622],[31.768127,35.194544],[31.767584,35.194263],[31.767406,35.194158],[31.767275,35.194086],[31.767186,35.194032],[31.767060,35.193952],[31.766943,35.193880],[31.766332,35.193496],[31.766165,35.193400],[31.766006,35.193311],[31.765759,35.193204],[31.765597,35.193140],[31.765406,35.193070],[31.765235,35.193017],[31.765058,35.192968],[31.764903,35.192939],[31.764758,35.192923],[31.764506,35.192897],[31.764120,35.192897],[31.763955,35.192912],[31.763666,35.192961],[31.763407,35.193019],[31.763170,35.193092],[31.762568,35.193328],[31.762122,35.193507],[31.761956,35.193568],[31.761662,35.193652],[31.761430,35.193669],[31.761223,35.193692],[31.760964,35.193692],[31.760788,35.193684],[31.760469,35.193645],[31.760284,35.193615],[31.760082,35.193565],[31.759867,35.193497],[31.759569,35.193362],[31.759465,35.193305],[31.759320,35.193216],[31.759233,35.193164],[31.758903,35.192916],[31.758314,35.192457],[31.757520,35.191820],[31.757350,35.191670],[31.757167,35.191497],[31.757014,35.191370],[31.756848,35.191246],[31.756668,35.191119],[31.756480,35.191012],[31.756399,35.190989],[31.756289,35.190959],[31.756246,35.190951],[31.756191,35.190944],[31.756129,35.190940],[31.755987,35.190945],[31.755861,35.190963],[31.755579,35.191018],[31.755386,35.191045],[31.755253,35.191064],[31.755180,35.191055],[31.755093,35.191041],[31.755019,35.191021],[31.754915,35.190972],[31.754752,35.190896],[31.754397,35.190700],[31.754227,35.190602],[31.754105,35.190514],[31.753925,35.190361],[31.753765,35.190207],[31.753604,35.190031],[31.753216,35.189610],[31.753071,35.189468],[31.752843,35.189263],[31.752767,35.189176],[31.752671,35.189075],[31.752281,35.188798],[31.752179,35.188756],[31.752106,35.188733],[31.751863,35.188651],[31.751655,35.188585],[31.751496,35.188551],[31.751335,35.188525],[31.751177,35.188516],[31.751091,35.188509],[31.750873,35.188520],[31.750799,35.188524],[31.750546,35.188488],[31.750449,35.188456],[31.750403,35.188418],[31.750366,35.188358],[31.750353,35.188254],[31.750370,35.188121],[31.750402,35.187956],[31.750454,35.187725],[31.750496,35.187563],[31.750611,35.187272],[31.750690,35.187134],[31.750896,35.186665],[31.751070,35.186352],[31.751162,35.186170],[31.751333,35.185893],[31.751567,35.185557],[31.751596,35.185507],[31.751610,35.185509],[31.751651,35.185503],[31.751689,35.185482],[31.751712,35.185460],[31.751748,35.185381],[31.751740,35.185340],[31.751728,35.185308],[31.751715,35.185287],[31.751691,35.185263],[31.751663,35.185246],[31.751643,35.185241],[31.751622,35.185236],[31.751579,35.185234],[31.751569,35.185236],[31.751447,35.185162],[31.751144,35.185011],[31.750945,35.184962],[31.750753,35.184931],[31.750431,35.184931],[31.750185,35.184931],[31.749805,35.185004],[31.748866,35.185454],[31.748763,35.185492],[31.748756,35.185476],[31.748740,35.185457],[31.748729,35.185448],[31.748722,35.185440],[31.748679,35.185427],[31.748663,35.185427],[31.748649,35.185429],[31.748634,35.185434],[31.748621,35.185442],[31.748614,35.185446],[31.748601,35.185458],[31.748595,35.185465],[31.748590,35.185471],[31.748579,35.185487],[31.748575,35.185495],[31.748566,35.185514],[31.748559,35.185534],[31.748554,35.185554],[31.748551,35.185576],[31.748550,35.185587],[31.748549,35.185610],[31.748550,35.185625],[31.748446,35.185615],[31.748378,35.185601],[31.748287,35.185571],[31.748118,35.185477],[31.748087,35.185457],[31.748048,35.185432],[31.747955,35.185331],[31.747883,35.185232],[31.747813,35.185051],[31.747579,35.184056],[31.747502,35.183893],[31.747427,35.183766],[31.747434,35.183747],[31.747437,35.183730],[31.747440,35.183714],[31.747440,35.183697],[31.747438,35.183680],[31.747435,35.183663],[31.747430,35.183647],[31.747423,35.183632],[31.747415,35.183618],[31.747405,35.183606],[31.747394,35.183595],[31.747382,35.183585],[31.747369,35.183578],[31.747356,35.183572],[31.747341,35.183568],[31.747326,35.183567],[31.747165,35.183195],[31.747020,35.182978],[31.746820,35.182775],[31.746562,35.182584],[31.746066,35.182319],[31.745740,35.182061],[31.745176,35.181593],[31.744877,35.181080],[31.744701,35.180738],[31.744483,35.180158],[31.744285,35.179500],[31.744130,35.179076],[31.744043,35.178753],[31.743955,35.178453],[31.743900,35.178240],[31.743721,35.177521],[31.743643,35.177172],[31.743594,35.176992],[31.743446,35.176452],[31.743362,35.176194],[31.743332,35.176068],[31.743165,35.175712],[31.743081,35.175593],[31.742998,35.175446],[31.742842,35.175202],[31.742687,35.174727],[31.742532,35.174203],[31.742490,35.173980],[31.742488,35.173771],[31.742495,35.172358],[31.742507,35.171953],[31.742507,35.171611],[31.742547,35.171242],[31.742567,35.171066],[31.742602,35.170605],[31.742671,35.170132],[31.742710,35.169752],[31.742735,35.169519],[31.742760,35.169357],[31.742773,35.169057],[31.742829,35.168529],[31.742865,35.168159],[31.742888,35.167711],[31.742928,35.167126],[31.742948,35.166607],[31.742986,35.166148],[31.743019,35.165168],[31.743084,35.164714],[31.743201,35.164203],[31.743299,35.163948],[31.743507,35.163663],[31.743867,35.163323],[31.744308,35.163077],[31.744559,35.162909],[31.744749,35.162766],[31.744911,35.162576],[31.745050,35.162372],[31.745166,35.162155],[31.745259,35.161924],[31.745317,35.161612],[31.745422,35.160557],[31.745502,35.160077],[31.745583,35.159453],[31.745675,35.158801],[31.745699,35.158163],[31.745660,35.157866],[31.745594,35.157593],[31.745526,35.157402],[31.745420,35.157172],[31.745199,35.156860],[31.744832,35.156576],[31.743951,35.155901],[31.743960,35.155891],[31.743967,35.155881],[31.743975,35.155864],[31.743979,35.155852],[31.743982,35.155840],[31.743982,35.155827],[31.743982,35.155815],[31.743979,35.155800],[31.743974,35.155785],[31.743966,35.155768],[31.743958,35.155758],[31.743946,35.155745],[31.743931,35.155735],[31.743920,35.155730],[31.743903,35.155726],[31.743891,35.155725],[31.743880,35.155725],[31.743863,35.155729],[31.743846,35.155735],[31.743836,35.155742],[31.743827,35.155749],[31.743815,35.155763],[31.743808,35.155773],[31.743801,35.155789],[31.743178,35.155295],[31.742780,35.155035],[31.742176,35.154738],[31.740545,35.153848],[31.739582,35.153292],[31.739129,35.152980],[31.738560,35.152464],[31.737841,35.151704],[31.737307,35.150944],[31.736761,35.150184],[31.736448,35.149777],[31.735356,35.148474],[31.734869,35.147877],[31.734416,35.147348],[31.733963,35.146887],[31.733464,35.146507],[31.733035,35.146249],[31.732675,35.146182],[31.732327,35.146168],[31.732048,35.146263],[31.730318,35.147399],[31.729740,35.147840],[31.729242,35.148451],[31.728859,35.148967],[31.728418,35.149931],[31.727723,35.151438],[31.727537,35.151696],[31.727340,35.151941],[31.727084,35.152159],[31.725151,35.153118],[31.724800,35.153341],[31.724579,35.153571],[31.724405,35.153870],[31.724278,35.154182],[31.724185,35.154522],[31.724162,35.154861],[31.724302,35.157305],[31.724361,35.158662],[31.724384,35.159667],[31.724307,35.160334],[31.723860,35.161513],[31.723677,35.161853],[31.723422,35.162151],[31.723067,35.162429],[31.722796,35.162627],[31.722529,35.162858],[31.722293,35.163217],[31.722193,35.163632],[31.722228,35.164365],[31.722298,35.164989],[31.722391,35.164985],[31.722563,35.165009],[31.722675,35.165041],[31.722750,35.165083],[31.722818,35.165125],[31.722870,35.165186],[31.722966,35.165464],[31.723092,35.166907],[31.723089,35.167018],[31.723074,35.167143],[31.722995,35.167545],[31.722916,35.167937],[31.722913,35.168003],[31.722910,35.168062],[31.722925,35.168186],[31.722977,35.168313],[31.723074,35.168397],[31.723176,35.168437],[31.723276,35.168464],[31.723382,35.168480],[31.723432,35.168386],[31.723476,35.168252],[31.723549,35.167939],[31.723649,35.167515],[31.723796,35.167022],[31.723883,35.166791],[31.723813,35.166723],[31.723748,35.166628],[31.723693,35.166520],[31.723672,35.166463],[31.723650,35.166373],[31.723607,35.166061],[31.723558,35.165686],[31.723635,35.165680],[31.723700,35.165669],[31.723785,35.165626],[31.723881,35.165574],[31.724066,35.165388],[31.724294,35.165147],[31.724536,35.164933],[31.724916,35.164693],[31.725291,35.164514],[31.725482,35.164410],[31.725558,35.164358],[31.725688,35.164259],[31.725698,35.164269],[31.725709,35.164278],[31.725722,35.164285],[31.725736,35.164289],[31.725750,35.164289],[31.725764,35.164286],[31.725777,35.164281],[31.725788,35.164274],[31.725800,35.164262],[31.725809,35.164249],[31.725816,35.164234],[31.725820,35.164218],[31.725821,35.164202],[31.725820,35.164186],[31.725816,35.164170],[31.725810,35.164155],[31.725802,35.164142],[31.725791,35.164130],[31.725779,35.164122],[31.725766,35.164116],[31.725753,35.164113],[31.725738,35.164113],[31.725725,35.164116],[31.725714,35.164120],[31.725707,35.164124],[31.725700,35.164130],[31.725692,35.164138],[31.725686,35.164146],[31.725678,35.164160],[31.725675,35.164170],[31.725672,35.164180],[31.725670,35.164191],[31.725670,35.164202],[31.725671,35.164213],[31.725673,35.164224],[31.725676,35.164234],[31.725680,35.164244],[31.725688,35.164259],[31.725558,35.164358],[31.725482,35.164410],[31.725291,35.164514],[31.724916,35.164693],[31.724536,35.164933],[31.724294,35.165147],[31.724066,35.165388],[31.723881,35.165574],[31.723785,35.165626],[31.723700,35.165669],[31.723635,35.165680],[31.723558,35.165686],[31.723607,35.166061],[31.723650,35.166373],[31.723672,35.166463],[31.723693,35.166520],[31.723748,35.166628],[31.723813,35.166723],[31.723883,35.166791],[31.724143,35.166419],[31.724581,35.165803],[31.724887,35.165511],[31.725111,35.165356],[31.725234,35.165301],[31.725313,35.165286],[31.725461,35.165332],[31.725513,35.165364],[31.725578,35.165418],[31.725609,35.165452],[31.725643,35.165493],[31.725646,35.165499],[31.725634,35.165507],[31.725626,35.165514],[31.725615,35.165527],[31.725610,35.165537],[31.725603,35.165553],[31.725600,35.165564],[31.725598,35.165576],[31.725598,35.165594],[31.725599,35.165605],[31.725602,35.165617],[31.725608,35.165633],[31.725614,35.165643],[31.725624,35.165656],[31.725632,35.165664],[31.725640,35.165670],[31.725653,35.165677],[31.725650,35.165686],[31.725489,35.165825],[31.725338,35.165963],[31.725203,35.166086],[31.725118,35.166174],[31.724955,35.166344],[31.724765,35.166580],[31.724576,35.166894],[31.724323,35.167416],[31.724254,35.167630],[31.724187,35.167859],[31.724096,35.168490],[31.724030,35.169103],[31.724021,35.169405],[31.723437,35.169548],[31.722891,35.169682],[31.722575,35.169789],[31.722569,35.169791],[31.722450,35.169861],[31.722404,35.169906],[31.722318,35.170015],[31.722166,35.170270],[31.722150,35.170330],[31.722063,35.170648],[31.722043,35.170719],[31.721963,35.171011],[31.721940,35.171096],[31.721895,35.171262],[31.721696,35.171243],[31.721687,35.171246],[31.721501,35.171294],[31.721360,35.171510],[31.721354,35.171520],[31.721309,35.171652],[31.721281,35.171809],[31.721200,35.172344],[31.721195,35.172355],[31.720959,35.172290],[31.720813,35.172272],[31.720705,35.172259]]";
    }



    /**
     * @param routeId
     * @param date    in format 2019-12-31
     * @return  JSON which is an array of objects representing several trips during the same day.
     * each object in the array represents a specific trip that can be displayed by the web app.
     * The web app receives the whole array, so it can display all trips of the same day.
     * The JSON is in following format:
        [
            {
                "routeId": "15531",
                "shortName": "420",
                "agencyCode": "16",
                "agencyName": "Superbus",
                "dayOfWeek": "SUNDAY",
                "date": "2019-03-31",
                "originalAimedDeparture": "05:20",
                "gtfsETA": null,
                "gtfsTripId": null,
                "stopsTimeData": null,
                "siriTripId": "37203669",
                "vehicleId": "3175078",
                "siri1": null,
                "siri": {
                    "type": "FeatureCollection",
                    "features":
                    [
                        {
                            "type": "Feature",
                            "geometry": {
                                "type": "Point",
                                "coordinates": ["31.743228912353516", "34.9853630065918"]
                            },
                        "properties": {
                            "time_recorded": "05:20:02",
                            "timestamp": "2019-03-31T05:20:05.443",
                            "recalculatedETA": "05:56"
                            }
                        },
                        {
                            "type": "Feature",
                            "geometry": {
                                "type": "Point",
                                "coordinates": ["31.742992401123047", "34.98709487915039"]
                            },
                            "properties": {
                                "time_recorded": "05:20:31",
                                "timestamp": "2019-03-31T05:21:05.457",
                                "recalculatedETA": "05:56"
                            }
                        }, ...
                        ...
                    ]
                }
            }, ...
            ...
        ]


     */
    @GetMapping("siri/day/{routeId}/{date}")
    public String retrieveSiriAndGtfsDataForRouteAndDateAsJson(@PathVariable String routeId, @PathVariable String date) {
        logger.warn("===> siri/day/{}/{}",routeId,date);
        return siriData.dayResults(routeId, date);
    }

    @GetMapping("gtfs/lines/{date}")
    public String retrieveAllLinesByDate(@PathVariable String date) {
        logger.warn("===> gtfs/lines/{}",date);
        String json = null;
        try {
            logger.warn("finding all GTFS routes for date {} ...", date);
            json = gtfsRoutes.allRoutesAsJson(date);
        } catch (JsonProcessingException e) {
            logger.error("exception while converting to JSON", e);
            return "[]";
        }
        return json;
    }







    // ===== deprecated =====





    //@GetMapping("gtfs/lines/old/{date}")
    @Deprecated
    private String retrieveAllLinesByDate1(@PathVariable String date) {
        logger.warn("finding siri bus lines for {} ...", date);
        List<String> routeIds = siriData.findAllBusLines(date);
        logger.warn("  Done");
        String json = null;
        try {
            logger.warn("finding GTFS routes for {} route IDs...", routeIds.size());
            json = gtfsRoutes.routesAsJson(io.vavr.collection.List.ofAll(routeIds), date);
        } catch (JsonProcessingException e) {
            logger.error("exception while converting to JSON", e);
            return "[]";
        }

        return json;
    }

}